アカウント登録の状態から。


akiko@MacBook-Pro ~ % git --version
xcode-select: note: no developer tools were found at '/Applications/Xcode.app', requesting install. Choose an option in the dialog to download the command line developer tools.
akiko@MacBook-Pro ~ % git config --global user.name "akiko"     
akiko@MacBook-Pro ~ % git config --global user.email "a.cuu1025@gmail.com"
akiko@MacBook-Pro ~ % git --version
git version 2.24.3 (Apple Git-128)
akiko@MacBook-Pro ~ % git config --global -l
user.name=akiko
user.email=a.cuu1025@gmail.com
akiko@MacBook-Pro ~ % pwd
/Users/akiko
kiko@MacBook-Pro ~ % ls
Applications		Library
Creative Cloud Files	Movies
Desktop			Music
Documents		Pictures
Downloads		Public



@MacBook-Pro ~ % mkdir git-test　　（失敗。デスクトップ上にファイルを作りたいので。。）


@MacBook-Pro ~ % cd Desktop
（デスクトップへ移動）

@MacBook-Pro Desktop % mkdir git-test
＜メイクディレクトリ：フォルダの新規作成。＞

@MacBook-Pro Desktop % cd git-test
（作った、フォルダに移動。）

@MacBook-Pro git-test % cd Desktop git-test　　（たぶん間違い。。飛ばして。）
cd: no such file or directory: /Users/.../git-test/git-test


@MacBook-Pro git-test % git init
<リポジトリを新規に作成するときに使用するコマンド。実行すると、そのディレクトリに「.git」というリポジトリ構成するディレクトリが作成されます>
（git-test に、.git　というリポジトリを作成する。）

Initialized empty Git repository in /Users/.../Desktop/git-test/.git/
<デスクトップのgit-test にリポジトリができた。>
ここが難しい。
(windowsは、dir /a:h /b で隠しファイルを確認)
(Macは、ls -a で隠しファイルも全て確認)
(隠しファイル.gitがリポジトリの正体です。)
これでリポジトリの作成ができ、Gitで管理されている状態になりました。

まず試しに、HTMLファイルを作成。その後で、追加したい、となったらまず、

// 現在のファイルの状態を確認
$git status
→未対応のファイルと出力されるはず。まだ、addしてないということが分かる。そしたら、


k@MacBook-Pro git-test % git add .
（変更のあった、git-testフォルダの全部、をステージングエリアに追加。まとめる。）
もしくは、add index.html のようにファイルを指定することも可能！！


もう一度、$git status　を実行してみると、
”New file” と表示され、ファイルが（インデックスに）登録されたことが分かります。


@MacBook-Pro git-test % git commit -m "初めてのGitです"
＜コミット＝インデックスに登録されたファイルをローカルリポジトリに保存！＞
（コメントもつけられる。ここは日本語でも大丈夫。）


gitではcommitの１つ１つがバージョンになっていくのですが、そのcommitの履歴を見たい時が出てくると思います。
その時に、使用するgitコマンドが「log」です。

$git log と実行すると、先ほどコミットしたものが履歴となり、表示されるようになりました。


→[master (root-commit) 92b6df7] 初めてのGitです
 1 file changed, 12 insertions(+)
 create mode 100644 index.html
（マスターに追加されました。）

@MacBook-Pro git-test % git log

commit 92b6df79a6b0eda3b69311f361fbf210442b4d00 (HEAD -> master)
Author: akiko <a.cuu1025@gmail.com>
Date:   Wed Jan 13 20:57:41 2021 +0900

    初めてのGitです
（マスターに、ファイルが保存されたようだ。）


＜一旦、ここでリモートと紐づけるために、GitHubサイトへログインして、リモートリポジトリを作る＞
そこのURLをコピペして、　origin の後に貼り付けて実行。




 git-test % git remote add origin https://github.com/akonosuke/git-test.git
// リモートリポジトリを連携するように追加する
$git remote add [リモートリポジトリ名] [追加したいリモートリポジトリ]

@MacBook-Pro git-test % git branch -M main   
ブランチの名前を　変更。  

@MacBook-Pro git-test % git push -u origin main
Username for 'https://github.com': git branch -M main　なんか失敗
Password for 'https://git branch -M main@github.com': 
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/akonosuke/git-test.git/'

@MacBook-Pro git-test % git push -u origin main
＜最初に作るときは、特殊で、
// ローカルリポジトリの内容を初めてリモートリポジトリに保存
$git push -u origin main　を実行。＞


（ここでパスワーど求められた。）
Username for 'https://github.com': 
Password for 'https://akonosuke@github.com': 
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 417 bytes | 417.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/akonosuke/git-test.git
 * [new branch]      main -> main
Branch 'main' set up to track remote branch 'main' from 'origin'.
@MacBook-Pro git-test % 

<Git Hub上に反映された>

******

＜ローカルファイルを再度、追加や変更後、保存して共有する＞
@MacBook-Pro git-test % git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?
＜どこの部分を追加保存しますか？？全部ですか？？＞

@MacBook-Pro git-test % git add .
@MacBook-Pro git-test % git commit -m "footer追加しました"

[main ddd4082] footer追加しました
 3 files changed, 94 insertions(+)
 create mode 100644 git.txt
 create mode 100644 "\345\210\235\343\202\201\343\201\246\343\203\252\343\203\235\343\202\270\343\203\210\343\203\252.txt"

@MacBook-Pro git-test % git push
＜２回目以降は、これだけでオッケー！＞


Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 8 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 1.89 KiB | 1.89 MiB/s, done.
Total 5 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/akonosuke/git-test.git
   92b6df7..ddd4082  main -> main
@MacBook-Pro git-test % 

